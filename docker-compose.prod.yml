version: "3"

services:
  db:
    image: postgres:11-alpine
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - fgiet-network
  api:
    build: api/.
    restart: always
    env_file:
      - django-env.env
    command: bash -c "python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn api.wsgi:application -b 0.0.0.0:8000 --workers 3"
    volumes:
      - ./api:/code
    # ports:
    #   - "8000:8000"
    expose:
      - "8000"
    depends_on:
      - db
    networks:
      - fgiet-network
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - api
    networks:
      - fgiet-network
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email rohitprakashsingh21@gmail.com --agree-tos --no-eff-email -d fee.fgiet.in

volumes:
  certbot-etc:
  certbot-var:
  database_data:
    driver: local
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /root/fgiet-data-center/app/dist/app
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /root/fgiet-data-center/dhparam/
      o: bind

networks:
  fgiet-network:
    driver: bridge
